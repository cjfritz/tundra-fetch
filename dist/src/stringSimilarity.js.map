{"version":3,"sources":["../../src/stringSimilarity.js"],"names":[],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEO,IAAM,4DAA0B,SAAhC;AACA,IAAM,4CAAkB,OAAxB;AACA,IAAM,oEAA8B,WAApC;AACA,IAAM,gFAAoC,iBAA1C;;AAEA,IAAM,kCAAa,SAAb,UAAa,CAAC,MAAD,EAAS,MAAT,EAAoB;AAC5C,MAAM,mBAAmB,OACtB,OADsB,CACd,IAAI,MAAJ,CAAW,sBAAa,GAAb,CAAX,EAA8B,GAA9B,CADc,EACsB,KADtB,EAEtB,OAFsB,CAEd,IAAI,MAAJ,CAAW,sBAAa,uBAAb,CAAX,EAAkD,GAAlD,CAFc,EAE0C,GAF1C,CAAzB;;AAIA,SAAO,kBAAQ,OAAR,CAAgB,MAAhB,EAAwB,gBAAxB,CAAP;AACD,CANM;;AAQA,IAAM,8CAAmB,SAAnB,gBAAmB,CAAC,IAAD,EAAU;AACxC,MAAI,QAAQ,uBAAS,IAAT,CAAZ,EAA4B;AAC1B,QAAM,aAAa,EAAnB;AACA,WAAO,IAAP,CAAY,IAAZ,EAAkB,IAAlB,GAAyB,OAAzB,CAAiC,UAAC,GAAD,EAAS;AACxC,iBAAW,GAAX,IAAkB,iBAAiB,KAAK,GAAL,CAAjB,CAAlB;AACD,KAFD;AAGA,QAAI,MAAM,OAAN,CAAc,IAAd,CAAJ,EAAyB;AACvB,aAAO,OAAO,MAAP,CAAc,UAAd,CAAP;AACD;AACD,WAAO,UAAP;AACD;AACD,SAAO,IAAP;AACD,CAZM;;kBAcQ,UAAC,MAAD,EAAS,MAAT,EAAkD;AAAA,MAAjC,oBAAiC,uEAAV,KAAU;;AAC/D,MAAI,CAAC,MAAD,IAAW,CAAC,UAAU,EAAX,OAAoB,UAAU,EAA9B,CAAf,EAAkD;AAChD,WAAO,WAAW,MAAlB;AACD;;AAED,MAAM,aAAa,WAAW,MAAX,EAAmB,MAAnB,CAAnB;;AAEA,MAAI,UAAJ,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,MAAI,wBAAwB,MAAxB,IAAkC,MAAtC,EAA8C;AAC5C,QAAI;AACF,UAAI,uBAAqB,MAAzB;AACA,UAAI,uBAAqB,MAAzB;;AAEA,wBAAkB,gBAAgB,OAAhB,CAAwB,kBAAxB,EAA4C,2BAA5C,CAAlB;;AAEA,wBAAkB,KAAK,KAAL,CAAW,eAAX,CAAlB;AACA,wBAAkB,KAAK,KAAL,CAAW,eAAX,CAAlB;;AAEA,wBAAkB,KAAK,SAAL,CAAe,iBAAiB,eAAjB,CAAf,CAAlB;AACA,wBAAkB,KAAK,SAAL,CAAe,iBAAiB,eAAjB,CAAf,CAAlB;;AAEA,wBAAkB,gBAAgB,OAAhB,CAAwB,iCAAxB,EAA2D,eAA3D,CAAlB;AACA,wBAAkB,gBAAgB,OAAhB,CAAwB,iCAAxB,EAA2D,eAA3D,CAAlB;;AAEA,aAAO,WAAW,eAAX,EAA4B,eAA5B,CAAP;AACD,KAhBD,CAgBE,OAAO,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF;AACF,C","file":"stringSimilarity.js","sourcesContent":["import escapeRegExp from 'lodash.escaperegexp';\nimport matcher from 'matcher';\nimport { isObject } from './helpers';\n\nexport const WILDCARD_MARKER_ESCAPED = '{{\\\\*}}';\nexport const WILDCARD_MARKER = '{{*}}';\nexport const UNQUOTED_MARKER_PLACEHOLDER = '\"%{{*}}%\"';\nexport const UNQUOTED_MARKER_PLACEHOLDER_REGEX = /\"%\\{\\{\\*\\}\\}%\"/g;\n\nexport const getIsMatch = (source, target) => {\n  const wildcardedSource = source\n    .replace(new RegExp(escapeRegExp('*'), 'g'), '\\\\*')\n    .replace(new RegExp(escapeRegExp(WILDCARD_MARKER_ESCAPED), 'g'), '*');\n\n  return matcher.isMatch(target, wildcardedSource);\n};\n\nexport const recursiveKeySort = (data) => {\n  if (data && isObject(data)) {\n    const sortedData = {};\n    Object.keys(data).sort().forEach((key) => {\n      sortedData[key] = recursiveKeySort(data[key]);\n    });\n    if (Array.isArray(data)) {\n      return Object.values(sortedData);\n    }\n    return sortedData;\n  }\n  return data;\n};\n\nexport default (source, target, shouldSortObjectKeys = false) => {\n  if (!source || (source || '') === (target || '')) {\n    return source === target;\n  }\n\n  const isMatching = getIsMatch(source, target);\n\n  if (isMatching) {\n    return true;\n  }\n\n  if (shouldSortObjectKeys && source && target) {\n    try {\n      let processedSource = `${source}`;\n      let processedTarget = `${target}`;\n\n      processedSource = processedSource.replace(/\\{\\{\\*\\}\\}(?!\")/g, UNQUOTED_MARKER_PLACEHOLDER);\n\n      processedSource = JSON.parse(processedSource);\n      processedTarget = JSON.parse(processedTarget);\n\n      processedSource = JSON.stringify(recursiveKeySort(processedSource));\n      processedTarget = JSON.stringify(recursiveKeySort(processedTarget));\n\n      processedSource = processedSource.replace(UNQUOTED_MARKER_PLACEHOLDER_REGEX, WILDCARD_MARKER);\n      processedTarget = processedTarget.replace(UNQUOTED_MARKER_PLACEHOLDER_REGEX, WILDCARD_MARKER);\n\n      return getIsMatch(processedSource, processedTarget);\n    } catch (e) {\n      return false;\n    }\n  }\n};\n"]}